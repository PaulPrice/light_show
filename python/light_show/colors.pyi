from typing import overload, Union

class ColorRGB:
    @overload
    def __init__(self, red: int, green: int, blue: int) -> None: ...
    @overload
    def __init__(self, other: Union["ColorRGB", "ColorRGBRef", "ColorHSV"]) -> None: ...
    def set(self, other: Union["ColorRGB", "ColorHSV"]) -> None: ...
    @property
    def red(self) -> int: ...
    @property
    def green(self) -> int: ...
    @property
    def blue(self) -> int: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class ColorRGBRef:
    def set(self, other: Union["ColorRGB", "ColorRGBRef", "ColorHSV"]) -> None: ...
    @property
    def red(self) -> int: ...
    @property
    def green(self) -> int: ...
    @property
    def blue(self) -> int: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class ColorHSV:
    @overload
    def __init__(self, hue: float, saturation: float, value: float) -> None: ...
    @overload
    def __init__(self, other: Union["ColorRGB", "ColorRGBRef", "ColorHSV"]) -> None: ...
    def set(self, other: Union["ColorRGB", "ColorHSV"]) -> None: ...
    def toRGB(self) -> ColorRGB: ...
    @property
    def hue(self) -> float: ...
    @property
    def saturation(self) -> float: ...
    @property
    def value(self) -> float: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
